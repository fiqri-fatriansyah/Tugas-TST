,
"/boardgame/list/search={name}" : {
  "get" : {
    "summary" : "Returns a list of all information about every board game that includes specific name.",
    "parameters" : [ {
      "name" : "name",
      "in" : "path",
      "required" : true,
      "style" : "simple",
      "explode" : false,
      "schema" : {
        "type" : "string"
      }
    } ],
    "responses" : {
      "200" : {
        "description" : "OK",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Board_Game"
              }
            }
          }
        }
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  }
},
"/boardgame/list/{id}" : {
  "get" : {
    "summary" : "Returns every information about a board game with parameter id.",
    "parameters" : [ {
      "name" : "id",
      "in" : "path",
      "required" : true,
      "style" : "simple",
      "explode" : false,
      "schema" : {
        "type" : "integer",
        "format" : "xxxx"
      }
    } ],
    "responses" : {
      "200" : {
        "description" : "OK",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Board_Game"
            }
          }
        }
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  },
  "put" : {
    "summary" : "Modifies data containing every information about a board game with parameter id.",
    "parameters" : [ {
      "name" : "id",
      "in" : "path",
      "required" : true,
      "style" : "simple",
      "explode" : false,
      "schema" : {
        "type" : "integer",
        "format" : "xxxx"
      }
    } ],
    "requestBody" : {
      "content" : {
        "application/x-www-form-urlencoded" : {
          "schema" : {
            "$ref" : "#/components/schemas/Board_Game"
          }
        }
      },
      "required" : true
    },
    "responses" : {
      "200" : {
        "description" : "OK"
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  },
  "post" : {
    "summary" : "Sends data containing every information about a board game with parameter id.",
    "parameters" : [ {
      "name" : "id",
      "in" : "path",
      "required" : true,
      "style" : "simple",
      "explode" : false,
      "schema" : {
        "type" : "integer",
        "format" : "xxxx"
      }
    } ],
    "requestBody" : {
      "content" : {
        "application/x-www-form-urlencoded" : {
          "schema" : {
            "$ref" : "#/components/schemas/Board_Game"
          }
        }
      },
      "required" : true
    },
    "responses" : {
      "200" : {
        "description" : "OK"
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  },
  "delete" : {
    "summary" : "Erases data containing every information about a board game with parameter id.",
    "parameters" : [ {
      "name" : "id",
      "in" : "path",
      "required" : true,
      "style" : "simple",
      "explode" : false,
      "schema" : {
        "type" : "integer",
        "format" : "xxxx"
      }
    } ],
    "responses" : {
      "200" : {
        "description" : "OK"
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  }
},
"/cafe/about" : {
  "get" : {
    "summary" : "Returns every general information about the cafe.",
    "responses" : {
      "200" : {
        "description" : "OK",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Cafe"
            }
          }
        }
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  },
  "put" : {
    "summary" : "Modifies data containing general information about the cafe.",
    "requestBody" : {
      "content" : {
        "application/x-www-form-urlencoded" : {
          "schema" : {
            "$ref" : "#/components/schemas/Cafe"
          }
        }
      },
      "required" : true
    },
    "responses" : {
      "200" : {
        "description" : "OK"
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  },
  "post" : {
    "summary" : "Sends data containing general information about the cafe.",
    "requestBody" : {
      "content" : {
        "application/x-www-form-urlencoded" : {
          "schema" : {
            "$ref" : "#/components/schemas/Cafe"
          }
        }
      },
      "required" : true
    },
    "responses" : {
      "200" : {
        "description" : "OK"
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  },
  "delete" : {
    "summary" : "Erases data containing general information about the cafe.",
    "responses" : {
      "200" : {
        "description" : "OK"
      },
      "401" : {
        "description" : "401 Access unauthorized"
      },
      "403" : {
        "description" : "403 Access forbidden"
      },
      "500" : {
        "description" : "500 Internal server error"
      }
    }
  }
}



def create(boardgame):
    id = boardgame.get("id", None)
    name = boardgame.get("name", None)
    publisher = boardgame.get("name", None)
    quantity = str(boardgame.get("quantity", None))

    #Is exist?
    if boardgame not in BOARD_GAME and id is not None:
        BOARD_GAME[id] = {
            "id" = id,
            "name" = name,
            "publisher" = publisher,
            "quantity" = quantity
        }
        return make_response{
            "Board game named {name} with id {id} has been created successfully!".format(name = name, id = id), 201
        }
    else:
        abort(
            406, "Board game already exist."
        
